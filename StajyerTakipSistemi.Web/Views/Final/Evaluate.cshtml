@model StajyerTakipSistemi.Web.Models.SFinal
@{
    ViewData["Title"] = "Evaluate";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

 
<style>


    main.pb-3 {
        overflow: visible !important;
        font-size: smaller !important;
    }

    }

    .container {
        max-width: 1200px !important;
    }

    .parent {
        display: grid;
        grid-template-columns: repeat(5, 1fr);
        grid-template-rows: repeat(5, 1fr);
        grid-column-gap: 0px;
        grid-row-gap: 0px;
        padding: 2rem;
    }

        .parent div {
            padding: 1rem;
        }

    #alertDiv {
        position: fixed;
        top: 0;
        left: 50%;
        transform: translateX(-50%);
        z-index: 1000;
    }

    .form-group {
        margin-bottom: 1rem;
    }

    label {
        background-color: black !important;
    }
</style>
<div class="container">
    <div class="con">
        <div class="header">
            <div class="header__title">Final</div>

        </div>


        @if (TempData["Message"] != null)
        {
            <div id="alertDiv" class="alert @(TempData["AlertClass"])">
                @TempData["Message"]
            </div>

            <script>
                document.addEventListener('DOMContentLoaded', function () {
                    setTimeout(function () {
                        var alertDiv = document.getElementById('alertDiv');
                        alertDiv.style.display = 'none';
                    }, 5000);
                });
            </script>
        }

       
                @using (Html.BeginForm("EvaluateProcess", "Final", FormMethod.Post, new { enctype = "multipart/form-data", id = "uploadForm" }))
                 {

                    <input type="hidden" name="FinalId" value="@TempData["FinalId"]" />

                    <div class="form-group" style="grid-area: 1 / 1/ 3 / 5;">
                        <label for="RelatedDocuments" class="control-label">İlgili Evraklar</label>
                        <div class="file-upload">
                            <input type="file" name="File" id="fileInput" multiple>

                            <div class="selected-files-container form-control">
                                <div id="selectedFiles" class="selected-files"></div>

                            </div>

                            <button type="button" id="chooseFilesBtn" class="btn btn-dark" style="width: 145px;" onclick="document.getElementById('fileInput').click();">Dosya Seç</button>
                        </div>
                    </div>
                     
                    <div class="form-group" style="grid-area: 5/ 1 / 7 / 5;">
                        <input type="submit" id="submitbutton" value="Gönder" class="clone-button" />
                    </div>
                }
                <style>



                    .selected-files {
                        /* No need for max-height or overflow-y here */
                    }

                    .file-upload {
                        display: flex;
                        flex-direction: row;
                        align-items: center;
                        font-size: smaller;
                    }

                    #fileInput {
                        display: none;
                    }

                    label {
                        color: #fff;
                        padding: 10px 20px;
                    }

                    .selected-files {
                        text-align: left;
                    }



                    .selected-files-container {
                        overflow-x: hidden;
                        max-height: 50px;
                        height: 39px;
                    }

                    .sub-selected-file {
                        display: flex;
                        flex-direction: row;
                        flex-wrap: nowrap;
                        justify-content: space-between;
                        padding-block: 1rem;
                        border-bottom: dashed;
                    }

                </style>

                @section scripts {
            <script>
                document.addEventListener("DOMContentLoaded", function () {
                    var fileInput = document.getElementById("fileInput");
                    var submitButton = document.getElementById("submitButton");
                    var chooseFilesBtn = document.getElementById("chooseFilesBtn");

                    fileInput.addEventListener("change", function () {
                        submitButton.disabled = fileInput.files.length === 0;
                    });

                });
            </script>
            <script>

                const fileInput = document.getElementById("fileInput");
                fileInput.addEventListener("change", function () {
                    const selectedFiles = fileInput.files;


                    if (selectedFiles.length > 0) {

                        const fileInfoContainer = document.getElementById("selectedFiles");

                        fileInfoContainer.innerHTML = "";

                        for (let i = 0; i < selectedFiles.length; i++) {
                            const file = selectedFiles[i];
                            const fileName = file.name;
                            const fileSize = (file.size / 1024).toFixed(2) + " KB";


                            const fileInfoItem = document.createElement("div");
                            fileInfoItem.textContent = `${fileName} (${fileSize})`;


                            fileInfoContainer.appendChild(fileInfoItem);
                        }
                    }
                });

            </script>


        }
             
        


    </div>
</div>