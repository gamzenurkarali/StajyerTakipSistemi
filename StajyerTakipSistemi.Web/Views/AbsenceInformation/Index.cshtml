 
@model StajyerTakipSistemi.Web.Models.InternAbsenceViewModel
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_MyLayout.cshtml";
}


     
 @section Styles{
    <style>
        main { 
            padding-right: 0 !important;
        }
        body { 
            background-color: #f2f2f2;
            margin: 0;
            padding: 0;
        }

        /* .container {
            font-size: calc(15px + 0.390625vw);
            border-radius: 15px;
            display: flex;
            flex-direction: row;
            height: 155%;
        } */

        

        .card {
            background-color: #ffffff;
            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
            border-radius: 10px;
            text-align: center;
            padding: 20px;
            width: 300px;
            margin: 10px;
        }

        
         

        .title {
            font-size: 20px;
            color: #8E8E8E;
        }

        .description {
            color: #8E8E8E;
        }

        
        main{
            width: -webkit-fill-available !important;
            overflow:visible !important; 
        }

        .bordered-div {
            overflow-y: auto;
            height:77%;
            max-height: 77%;
            border: black;
            border-style: solid;
            /* border-radius: 14px; */
            padding: 1rem;
            margin-bottom:1rem;
        }

        p.description {
            margin-top: 0;
            margin-bottom: 0;
            font-size: smaller;
             
            color: #8E8E8E;
        }

        h2.profile-title {
            font-size: 29px;
            font-weight: 900;
            color: #00BF63; 
        }

         
        .image:hover {
            max-width: 100%;
            height: auto;
            width: 75%;
            margin-bottom: 2rem;
            margin-top: 1rem;
            background: white;
        }
        .image {
            border-radius: 14px;
            background-color: #00BF63;
            max-width: 100%;
            height: auto;
            width: 75%;
            margin-bottom: 2rem;
            margin-top: 1rem;
            cursor:pointer;
        }

        .left-card { 
            overflow: hidden;
            position: static;
            text-align: center;
            align-items: center;
            width: 35%;
            background: transparent;
            box-shadow: none;
            border: 0;
            height:55%; 


            
        }

        .right-card {
            text-align: left;
            width: -webkit-fill-available; 
            padding: 3rem;
            height: 462px;
        }

        
         .date-abs{
            align-items: flex-end;
         }

         .ghost{
            color: #eef2fb;
         }




        .calendar-container {
            background-color: #fff;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            overflow: hidden;
            width: 106%;
            height: 460px;
            margin-top: 12px;
        }

        .calendar-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px;
            background-color: black;
            color: #fff;
            height: 95px;
        }

        .calendar {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 1px;
        }

        .day {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 60px;
            border: 1px solid #ddd;
            cursor: pointer;
        }

        .marked {
            background-color: black;
            color: #fff;
        }

        .arrow {
            border: solid black;
            border-width: 0 3px 3px 0;
            display: inline-block;
            padding: 3px;
        }

        .right {
            transform: rotate(-45deg);
            -webkit-transform: rotate(-45deg);
        }

        .left {
            transform: rotate(135deg);
            -webkit-transform: rotate(135deg);
        }
        button{
            display: flex;
            align-content: center;
            height: 30px;
            flex-wrap: wrap;
            border-radius: 50%;
            width: 30px;
            
            background-color: white;
            border: 0;
        }
    </style>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
}
@section Scripts{
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
   @*  <script>
        $(document).ready(function() {
             
            var $image = $(".image");
             
            var $leftCard = $(".left-card");

            var $ghost = $(".ghost");
            
            $image.mouseenter(function() {
                 

                $leftCard.css({
                    "text-align": "center",
                    "align-items": "center",
                    "width": "35%",
                    "overflow": "visible",
                    "background": "white",
                    "box-shadow": "0 4px 8px 0 rgba(0, 0, 0, 0.2)",
                    
                });
                $ghost.css({
                    "color": "",
                });
            });

            
            $image.mouseleave(function() {
                 
                $leftCard.css({
                    "text-align": "",
                    "align-items": "",
                    "width": "", 
                    "max-height": "",
                    "overflow": "",
                    "background": "",
                    "box-shadow": "" 
                });
                $ghost.css({
                    "color": "#eef2fb",
                });
            });
        });
    </script> *@

}

<div class="container">
    <div class="con">
        <div class="header">
            <div class="header__title">DEVAMSIZLIK BİLGİSİ</div>
            <p>@Model.Intern.FirstName @Model.Intern.LastName</p>
        </div>
        <div style="display:flex; ">
    <div class="calendar-container">
        <div class="calendar-header">
            <button style="padding-left: 12px;" id="prevMonth"><i class="arrow left"></i></button>
            <h2 id="currentMonthYear"></h2>
            <button style="padding-left: 9px;" id="nextMonth"><i class="arrow right"></i></button>
        </div>
        <div class="calendar" id="calendar"></div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const calendarContainer = document.getElementById('calendar');
            const currentMonthYearElement = document.getElementById('currentMonthYear');
            const prevMonthButton = document.getElementById('prevMonth');
            const nextMonthButton = document.getElementById('nextMonth');

            let currentDate = new Date();
            var markedDates = @Html.Raw(Json.Serialize(ViewBag.MarkedDates));

            function generateCalendar(year, month) {
                const daysInMonth = new Date(year, month + 1, 0).getDate();
                const firstDay = new Date(year, month, 1).getDay();

                calendarContainer.innerHTML = '';

                // Önce boş hücreler ekleyelim
                for (let i = (firstDay === 0 ? 6 : firstDay - 1); i > 0; i--) {

                    const emptyDay = document.createElement('div');
                    emptyDay.classList.add('day', 'empty');
                    calendarContainer.appendChild(emptyDay);
                }

                // Tarihleri ekleyelim
                for (let i = 1; i <= daysInMonth; i++) {
                    const day = document.createElement('div');
                    day.classList.add('day');
                    day.textContent = i;

                    // İşaretlenmiş günleri vurgula
                            if (markedDates.includes(`${year}-${(month + 1).toString().padStart(2, '0')}-${i.toString().padStart(2, '0')}`)) {
                                day.classList.add('marked');
                            }

                    // day.addEventListener('click', function () {
                    //     // Tıklanan günü işaretle veya işareti kaldır
                    //     const date = `${year}-${month + 1}-${i}`;
                    //     if (markedDates.includes(date)) {
                    //         markedDates = markedDates.filter(d => d !== date);
                    //     } else {
                    //         markedDates.push(date);
                    //     }
                    //     generateCalendar(year, month); // Takvimi güncelle
                    // });

                    calendarContainer.appendChild(day);
                }

                currentMonthYearElement.textContent = `${getMonthName(month)} ${year}`;
            }

            function getMonthName(month) {
                const monthNames = [
                    'January', 'February', 'March', 'April',
                    'May', 'June', 'July', 'August',
                    'September', 'October', 'November', 'December'
                ];
                return monthNames[month];
            }

            function updateCalendar() {
                const year = currentDate.getFullYear();
                const month = currentDate.getMonth();
                generateCalendar(year, month);
            }

            prevMonthButton.addEventListener('click', function () {
                currentDate.setMonth(currentDate.getMonth() - 1);
                updateCalendar();
            });

            nextMonthButton.addEventListener('click', function () {
                currentDate.setMonth(currentDate.getMonth() + 1);
                updateCalendar();
            });

            updateCalendar();
        });

    </script>

    <div class="card right-card">  
        <div class="bordered-div">
            @foreach (var absence in Model.AbsenceInfo)
            {
                        <div class="date-abs" style="display:flex;margin-bottom: 1rem;align-items: center;">
                            <span class="material-symbols-outlined" style="color:red !important;margin-right: 1rem;">dangerous</span>
                    <p class="description">@absence.AbsenceDate</p>
                </div>
            }
        </div>
        
        <p class="description ghost">Başlama Tarihi: @Model.Intern.StartDate</p>

        @{
            DateTime bugun = DateTime.Now;
            DateTime baslamaTarihi = Model.Intern.StartDate;

            // Tarihler arasındaki farkı hesaplama
            TimeSpan fark = bugun - baslamaTarihi;

            // Yıl, ay, hafta ve gün hesaplama
            int gecenYil = fark.Days / 365;
            int kalanGun = fark.Days % 365;
            int gecenAy = kalanGun / 30;
            int kalanGun1 = kalanGun % 30;
            int gecenHafta = kalanGun1 / 7;
            int kalanGun2 = kalanGun1 % 7;

            <p class="description ghost">
                Staj'a başlayalı
                @if (gecenYil > 0)
                {
                    @gecenYil <text> yıl</text>
                }

                @if (gecenAy > 0)
                {
                    @gecenAy <text> ay</text>
                }

                @if (gecenHafta > 0)
                {
                    @gecenHafta <text> hafta</text>
                }

                @if (kalanGun2 > 0)
                {
                    @kalanGun2 <text> gün</text>
                }
                oldu.
            </p>


        }
        <p class="description" style="align-self: end;">Total Gelmediği Günler: @Model.AbsenceInfo.Count</p>
    </div>


</div>
    </div>
</div>
@* <div class="container">
    <div class="card left-card">
        <img src="~/happy_penguin.png" alt="Profil" class="image">
       
    </div>
  
</div>

  *@







